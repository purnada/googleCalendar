<?php

namespace App\Http\Controllers\folderDir;

use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use App\Models\Dummy;
use App\Http\Requests\folderDir\DummyRequest;
use App\Http\Resources\DummyResource;
use Illuminate\Support\Str;

class DummyController extends Controller
{

    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index(Request $request)
    {
        $query = Dummy::query();

        $filter = $this->filterQuery($query);
        
        
        $dummies = $filter->latest('id')->paginate(15);

        return view('{{$viewDir}}.pages.dummies.index',compact('dummies'));

    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        return view('{{$viewDir}}.pages.dummies.create');
    }


    /**
     * Store a newly created resource in storage.
     *
     * @param  \App\Http\Requests\Dummy\DummyRequest $request
     *
     * @return \Illuminate\Http\Response
     */
    public function store(DummyRequest $request)
    {
        Dummy::create($request->validated());
        
        $notification = Str::toastMsg(config('custom.msg.create'),'success');

        return redirect()->route('{{$viewDir}}.dummies.index')->with($notification);
    }


    /**
     * Display the specified resource.
     *
     * @param  \App\Models\Dummy  $dummy
     * @return \Illuminate\Http\Response
     */
    public function show(Dummy $dummy)
    {
        return view('{{$viewDir}}.pages.dummies.show',compact('dummy'));
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \App\Http\Requests\DummyRequest $request
     *
     * @return \Illuminate\Http\Response
     */


    /**
     * Show the form for editing the specified resource.
     *
     * @param  \App\Dummy  $dummy
     * @return \Illuminate\Http\Response
     */
    public function edit(Dummy $dummy)
    {
        return view('{{$viewDir}}.pages.dummies.edit',compact('dummy'));
    }
    
    public function update(DummyRequest $request, Dummy $dummy)
    {
        $dummy->update($request->validated());
        $notification = Str::toastMsg(config('custom.msg.update'),'success');
        return redirect()->route('{{$viewDir}}.dummies.index')->with($notification);
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \App\Models\Dummy  $dummy
     * @return \Illuminate\Http\Response
     */
    public function destroy(Dummy $dummy)
    {
        $dummy->delete();
        $notification = Str::toastMsg(config('custom.msg.delete'),'success');
        return response($notification);
    }

    private function filterQuery($query)
    {
        if(request()->filled('name')) {
             $query->where('name','like', '%'. request()->name.'%');
        }

        return $query;
    }

}